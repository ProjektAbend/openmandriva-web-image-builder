openapi: 3.0.3
info:
  title: OpenMandriva Web Image Builder API
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Development Server
paths:
  /build:
    post:
      summary: Builds an image
      description: >
        An image is set to be generated if the maximum capacity
        of the service is not reached
      operationId: buildImage
      requestBody:
        description: >
          The ImageConfig object containing all necessary information
          to build the desired image
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageConfig'
      responses:
        '201':
          description: >
            A confirmation that the build process has started along with
            some informations about the image to be build
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfo'
        '400':
          description: Invalid ImageConfig Object
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /status/{imageId}:
    get:
      summary: Get status of image
      description: Gets the status of the image beeing currently build
      operationId: getStatusOfImageById
      parameters:
        - name: imageId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ImageId'
      responses:
        '200':
          description: >
            The ImageInfo object which contains the
            current state of the image build
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageInfo'
  /image/{imageId}:
    get:
      summary: Gets an image by its ID
      description: Retrieve an ISO image by its identifier
      operationId: getImageById
      parameters:
        - name: imageId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ImageId'
      responses:
        '200':
          description: The image was found. The response is an .iso file
          content:
            application/x-iso9660-image:
              schema:
                type: string
                format: binary
components:
  schemas:
    ImageConfig:
      type: object
      required:
        - architecture
      properties:
        imageId:
          $ref: '#/components/schemas/ImageId'
        architecture:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
          description: >
            The name of the architecture for which the image is targeted for
          example: 'aarch64-uefi'
        version:
          type: string
          description: >
            The specific release version of OpenMandriva inside the image
          example: '4.2'
        desktop:
          type: string
          description: The name of the desktop to be installed
          example: 'kde'
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        packages:
          type: array
          items:
            $ref: '#/components/schemas/Package'
    Package:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: >
            The name of the package or packageset you want
            to include inside the image
          example: 'vim-enhanced'
        installWeakDependencies:
          type: boolean
          description: >
            Set this to false if weak dependencies should not be installed
          default: true
        packageType:
          $ref: '#/components/schemas/PackageType'
        repositoryType:
          $ref: '#/components/schemas/RepositoryType'
    Service:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: >
            The name of the systemd service you want to enable or disable
          example: 'cloud-init'
        disabled:
          type: boolean
          description: >
            Set this to true if you want to disable the named service
    PackageType:
      type: string
      enum:
        - INDIVIDUAL
        - MULTIPLE
    RepositoryType:
      type: string
      enum:
        - UNSUPPORTED
        - RESTRICTED
        - NON-FREE
    ImageInfo:
      type: object
      required:
        - imageId
      properties:
        imageId:
          $ref: '#/components/schemas/ImageId'
        isAvailable:
          type: boolean
          description: Indicates whether the image is available to download
          example: true
        availableUntil:
          type: string
          format: date-time
          description: >
            The date and time until which the image is available.
            An image is available for download for 24 hours
            after being generated
          example: "2023-08-15T12:34:56Z"
    ImageId:
      type: string
      pattern: '^[a-zA-Z0-9]{6}$'
      description: >
        The unique identifier for the image.
        It is randomly generated
      example: 'a1b2c3'